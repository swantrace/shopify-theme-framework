<script>
window[window.themeName].themeElements = [
  {
    tagName: "main-cart-form",
    observedAttributes:  ["cart_json", "cart_is_updating", "old_cart_json"],
    definition: function(html, hooks) {
      return function({cart_json, cart_is_updating, old_cart_json}){
        var [cart, old_cart, { onQuantityInputChanged, onRemoveLinkClicked, onUpdateButtonClicked }] = hooks.useCartForm(cart_json, cart_is_updating, old_cart_json);
        return html`{% render 'main-cart-form' %}`
      }
    }
  },
  {
    tagName: "add-to-cart-form",
    observedAttributes: ['product_handle', 'cart_is_updating'],
    definition: function(html, hooks){ 
      return function({product_handle, cart_is_updating}) {
        var [product, currentVariant, options, { onATCButtonClicked, onOptionChanged }] = hooks.useATCForm(product_handle);
        return html`{% render "add-to-cart-form" %}`;
      }
    }  
  },
  {
    tagName: 'collection-tags',
    observedAttributes: ['current_tags', 'all_tags', 'tags'],
    definition: function(html, hooks, store, apis){ 
      return function({current_tags, all_tags, tags}){
        var [current_tags, all_tags, tags, { onCurrentTagsChanged }] = hooks.useCollectionTagsFilter(current_tags, all_tags, tags);
        return html`{% render "collection-tags" %}`;
      }
    }
  },
  {
    tagName: 'collection-sorting',
    observedAttributes: ['sort_by', 'sort_options'],
    definition: function(html, hooks, store, apis){
      return function({sort_by, sort_options}){
        var [sort_options, { onSortByChanged }] = hooks.useCollectionSortByController(sort_options);
        return html`{% render "collection-sorting" %}`
      }
    }
  },
  {
    tagName: 'collection-products-list',
    observedAttributes: ['product_handles'],
    definition: function(html, hooks){ 
      return function(){
        return html``;
      }
    }
  }
]
</script>